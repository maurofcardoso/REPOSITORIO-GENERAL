// <auto-generated />
using System;
using Infraestructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infraestructure.Migrations
{
    [DbContext(typeof(ProyectoSoftwareContext))]
    partial class ProyectoSoftwareContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.Carrito", b =>
                {
                    b.Property<Guid>("CarritoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.HasKey("CarritoId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Carritos", (string)null);

                    b.HasData(
                        new
                        {
                            CarritoId = new Guid("5ee604af-6677-4606-aaf1-544fe610e1c1"),
                            ClienteId = 1,
                            Estado = true
                        });
                });

            modelBuilder.Entity("Domain.Entities.CarritoProducto", b =>
                {
                    b.Property<Guid>("CarritoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.HasKey("CarritoId", "ProductoId")
                        .HasName("ID");

                    b.HasIndex("ProductoId");

                    b.ToTable("Carrito / Producto", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteId"), 1L, 1);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes", (string)null);

                    b.HasData(
                        new
                        {
                            ClienteId = 1,
                            Apellido = "Cardoso",
                            DNI = "31282983",
                            Direccion = "Calle 421",
                            Nombre = "Mauro",
                            Telefono = "1158594841"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Orden", b =>
                {
                    b.Property<Guid>("OrdenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CarritoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal (15,2)");

                    b.HasKey("OrdenId");

                    b.HasIndex("CarritoId")
                        .IsUnique();

                    b.ToTable("Ordenes", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoId"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasPrecision(15, 2)
                        .HasColumnType("decimal (15,2)");

                    b.HasKey("ProductoId");

                    b.ToTable("Productos", (string)null);

                    b.HasData(
                        new
                        {
                            ProductoId = 1,
                            Codigo = "Cod 1",
                            Descripcion = "Cuidado Corporal",
                            Image = "https://i.imgur.com/ii8kB2g.jpg",
                            Marca = "Nivea",
                            Nombre = "Bronceador",
                            Precio = 1693m
                        },
                        new
                        {
                            ProductoId = 2,
                            Codigo = "cod 2",
                            Descripcion = "Espumante",
                            Image = "https://i.imgur.com/4M7bD2X.jpg",
                            Marca = "Nieto Senetiner",
                            Nombre = "Champagne",
                            Precio = 1940m
                        },
                        new
                        {
                            ProductoId = 3,
                            Codigo = "cod 3",
                            Descripcion = "Ciruela",
                            Image = "https://i.imgur.com/q4tQeeH.jpg",
                            Marca = "Emeth",
                            Nombre = "Mermelada",
                            Precio = 231m
                        },
                        new
                        {
                            ProductoId = 4,
                            Codigo = "Cod 4",
                            Descripcion = "Mineral",
                            Image = "https://i.imgur.com/Jdz22SZ.jpg",
                            Marca = "King",
                            Nombre = "Agua",
                            Precio = 160m
                        },
                        new
                        {
                            ProductoId = 5,
                            Codigo = "Cod 5",
                            Descripcion = "Organica",
                            Image = "https://i.imgur.com/nE1TQaW.jpg",
                            Marca = "Chango",
                            Nombre = "Azucar",
                            Precio = 429m
                        },
                        new
                        {
                            ProductoId = 6,
                            Codigo = "Cod 6",
                            Descripcion = "Descartables",
                            Image = "https://i.imgur.com/NwWXjUW.jpg",
                            Marca = "Elite",
                            Nombre = "Pañuelos",
                            Precio = 178m
                        },
                        new
                        {
                            ProductoId = 7,
                            Codigo = "Cod 7",
                            Descripcion = "Pollo",
                            Image = "https://i.imgur.com/wbIl0jU.jpg",
                            Marca = "Well",
                            Nombre = "Medallon",
                            Precio = 119m
                        },
                        new
                        {
                            ProductoId = 8,
                            Codigo = "Cod 8",
                            Descripcion = "Goma",
                            Image = "https://i.imgur.com/zgOx8TG.jpg",
                            Marca = "Dia",
                            Nombre = "Secador",
                            Precio = 425m
                        },
                        new
                        {
                            ProductoId = 9,
                            Codigo = "Cod 9",
                            Descripcion = "Rellenas",
                            Image = "https://i.imgur.com/KJAyrFa.jpg",
                            Marca = "Frutigram",
                            Nombre = "Galletitas",
                            Precio = 165m
                        },
                        new
                        {
                            ProductoId = 10,
                            Codigo = "Cod 10",
                            Descripcion = "Tostado",
                            Image = "https://i.imgur.com/RYgyvxE.jpg",
                            Marca = "Martinez",
                            Nombre = "Cafe",
                            Precio = 1391m
                        });
                });

            modelBuilder.Entity("Domain.Entities.Carrito", b =>
                {
                    b.HasOne("Domain.Entities.Cliente", "Cliente")
                        .WithMany("ListCarritos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Domain.Entities.CarritoProducto", b =>
                {
                    b.HasOne("Domain.Entities.Carrito", "Carrito")
                        .WithMany("ListCarritoProductos")
                        .HasForeignKey("CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Producto", "Producto")
                        .WithMany("ListCarritoProductos")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrito");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Domain.Entities.Orden", b =>
                {
                    b.HasOne("Domain.Entities.Carrito", "Carrito")
                        .WithOne("Orden")
                        .HasForeignKey("Domain.Entities.Orden", "CarritoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrito");
                });

            modelBuilder.Entity("Domain.Entities.Carrito", b =>
                {
                    b.Navigation("ListCarritoProductos");

                    b.Navigation("Orden")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Cliente", b =>
                {
                    b.Navigation("ListCarritos");
                });

            modelBuilder.Entity("Domain.Entities.Producto", b =>
                {
                    b.Navigation("ListCarritoProductos");
                });
#pragma warning restore 612, 618
        }
    }
}
